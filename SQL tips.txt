ðŸ“ŒUse NOT EXISTS instead of NOT IN when identifying customers who havenâ€™t placed any orders in the last 90 days.
â†’The reason is that NOT IN does not handle NULL values safely â€” if the subquery returns even a single NULL, the entire condition evaluates as unknown, and                                                                      	no rows may be returned.
â†’PostgreSQL operates with three-valued logic: TRUE, FALSE, and NULL.
â†’In contrast, NOT EXISTS is null-safe â€” it simply checks for the absence of matching rows, regardless of nulls in the subquery. 
ðŸ“ŒTwo new columns in the output that arenâ€™t in the input?
â†’ That means you need a CASE statement. Learn to derive not just retrieve.

ðŸ“ŒConditional logic?
â†’ Think: If-Then-Else = CASE WHEN ... THEN ... ELSE ... END